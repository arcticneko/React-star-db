[{"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\index.js":"1","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\app\\index.js":"2","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\app\\app.js":"3","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\random-planet\\index.js":"4","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\header\\index.js":"5","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\item-list\\index.js":"6","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\header\\header.js":"7","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\random-planet\\random-planet.js":"8","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\item-list\\item-list.js":"9","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\services\\swapi-service.js":"10","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\spinner\\index.js":"11","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\spinner\\spinner.js":"12","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\error-indicator\\error-indicator.js":"13","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\error-indicator\\index.js":"14","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\people-page\\people-page.js":"15","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\row\\index.js":"16","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\row\\row.js":"17","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\error-boundry\\index.js":"18","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\error-boundry\\error-boundry.js":"19","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\item-details\\index.js":"20","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\item-details\\item-details.js":"21"},{"size":159,"mtime":1586990536000,"results":"22","hashOfConfig":"23"},{"size":46,"mtime":1586990536000,"results":"24","hashOfConfig":"23"},{"size":1910,"mtime":1609699473584,"results":"25","hashOfConfig":"23"},{"size":74,"mtime":1586990536000,"results":"26","hashOfConfig":"23"},{"size":54,"mtime":1586990536000,"results":"27","hashOfConfig":"23"},{"size":62,"mtime":1586990536000,"results":"28","hashOfConfig":"23"},{"size":465,"mtime":1586990536000,"results":"29","hashOfConfig":"23"},{"size":2090,"mtime":1608556490998,"results":"30","hashOfConfig":"23"},{"size":827,"mtime":1609075970964,"results":"31","hashOfConfig":"23"},{"size":2742,"mtime":1609698136162,"results":"32","hashOfConfig":"23"},{"size":59,"mtime":1608298236459,"results":"33","hashOfConfig":"23"},{"size":352,"mtime":1608299131691,"results":"34","hashOfConfig":"23"},{"size":476,"mtime":1608307371000,"results":"35","hashOfConfig":"23"},{"size":83,"mtime":1608307380891,"results":"36","hashOfConfig":"23"},{"size":911,"mtime":1609087342408,"results":"37","hashOfConfig":"23"},{"size":48,"mtime":1609075381304,"results":"38","hashOfConfig":"23"},{"size":255,"mtime":1609075259102,"results":"39","hashOfConfig":"23"},{"size":77,"mtime":1609077687860,"results":"40","hashOfConfig":"23"},{"size":381,"mtime":1609077790270,"results":"41","hashOfConfig":"23"},{"size":102,"mtime":1609697090830,"results":"42","hashOfConfig":"23"},{"size":1937,"mtime":1609697830565,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"n185i",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\index.js",[],["91","92"],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\app\\index.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\app\\app.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\random-planet\\index.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\header\\index.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\item-list\\index.js",[],["93","94"],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\header\\header.js",["95","96","97","98"],"import React from 'react';\n\nimport './header.css';\n\nconst Header = () => {\n  return (\n    <div className=\"header d-flex\">\n      <h3>\n        <a href=\"#\">\n          Star DB\n        </a>\n      </h3>\n      <ul className=\"d-flex\">\n        <li>\n          <a href=\"#\">People</a>\n        </li>\n        <li>\n          <a href=\"#\">Planets</a>\n        </li>\n        <li>\n          <a href=\"#\">Starships</a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Header;","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\random-planet\\random-planet.js",["99"],"import React, { Component } from 'react';\n\nimport './random-planet.css';\nimport Spinner from '../spinner';\nimport SwapiService from '../../services/swapi-service'\nimport ErrorIndicator from '../error-indicator/error-indicator';\n\nexport default class RandomPlanet extends Component {\n\n\tswapiService = new SwapiService();\n\n\tstate = {\n\t\tplanet: {},\n\t\tloading: true,\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updatePlanet();\n\t\tthis.interval = setInterval(this.updatePlanet(), 2500);\n\t\t\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.interval)\n\t}\n\n\tonPlanetLoaded = (planet) => {\n\t\tthis.setState({ \n\t\t\tplanet, \n\t\t\tloading: false, \n\t\t\terror: false \n\t\t})\n\t}\n\n\tonError = (err) => {\n\t\tthis.setState({\n\t\t\terror: true,\n\t\t\tloading: false\n\t\t})\n\t}\n\n\tupdatePlanet = () => {\n\t\tconst id = Math.floor(Math.random() * 15) + 3;\n\n\t\tthis.swapiService\n\t\t\t.getPlanet(id)\n\t\t\t.then(this.onPlanetLoaded)\n\t\t\t.catch(this.onError)\n\t}\n\n\n\trender() {\n\t\tconst { planet, loading, error } = this.state;\n\n\t\tconst hasData = !(loading || error); // нет загрузки, нет ошибки\n\n\t\tconst errorMessage = error ? <ErrorIndicator /> : null\n\t\tconst spinner = loading ? <Spinner /> : null\n\t\tconst content = hasData ? <PlanetView planet={planet} /> : null\n\n\t\treturn (\n\t\t\t<div className=\"random-planet jumbotron rounded\">\n\t\t\t\t{spinner}\n\t\t\t\t{content}\n\t\t\t\t{errorMessage}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst PlanetView = ( {planet} ) => {\n\tconst { id, name, population, rotationPeriod, diameter } = planet;\n\n\treturn (\n\t<React.Fragment>\n\t\t<img className=\"planet-image\"\n\t\t\tsrc={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\n\t\t<div>\n\t\t\t<h4>{name}</h4>\n\t\t\t<ul className=\"list-group list-group-flush\">\n\t\t\t\t<li className=\"list-group-item\">\n\t\t\t\t\t<span className=\"term\">Population</span>\n\t\t\t\t\t<span>{population}</span>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"list-group-item\">\n\t\t\t\t\t<span className=\"term\">Rotation Period</span>\n\t\t\t\t\t<span>{rotationPeriod}</span>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"list-group-item\">\n\t\t\t\t\t<span className=\"term\">Diameter</span>\n\t\t\t\t\t<span>{diameter}</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</React.Fragment>\n\t)\n}","C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\item-list\\item-list.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\services\\swapi-service.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\spinner\\index.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\spinner\\spinner.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\error-indicator\\error-indicator.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\error-indicator\\index.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\people-page\\people-page.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\row\\index.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\row\\row.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\error-boundry\\index.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\error-boundry\\error-boundry.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\item-details\\index.js",[],"C:\\Users\\Webby\\Documents\\GitHub\\react-apps\\star-db\\src\\components\\item-details\\item-details.js",["100","101","102","103"],"import React, { Component } from 'react';\n\nimport './item-details.css';\nimport SwapiService from '../../services/swapi-service'\nimport Spinner from '../spinner';\n\nconst Record = ({ item, field, label }) => {\n\treturn (\n\t\t<li className='list-group-item'>\n\t\t\t<span className='term'>{label}</span>\n\t\t\t<span>{item[field]}</span>\n\t\t</li>\n\t)\t\n}\n\nexport {\n\tRecord\n}\n\nexport default class ItemDetails extends Component {\n\t\n\tswapiService = new SwapiService();\n\n\tstate = {\n\t\titem: null,\n\t\tloaded: false,\n\t\timage: null\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateItem(); // если компонент уже был проинициализирован\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.itemId !== prevProps.itemId) { // проверить изменение свойства. иначе зациклится обновление компонента как только он обновился\n\t\t\tthis.updateItem();\n\t\t}\n\t}\n\n\tupdateItem() {\n\t\tconst { itemId, getData, getImageUrl } = this.props;\n\t\tif (!itemId) {\n\t\t\treturn; // ничего не делать в случае null\n\t\t}\n\n\t\tthis.setState({\n\t\t\tloaded: false\n\t\t})\n\n\t\tgetData(itemId).then((item) => {\n\t\t\tthis.setState({\n\t\t\t\titem,\n\t\t\t\tloaded: true,\n\t\t\t\timage: getImageUrl(item),\n\t\t\t})\n\t\t})\n\t}\n\n  render() {\n\n\t\tconst { item, image, loaded } = this.state;\n\n\t\tif (!item) {\n\t\t\treturn <span>Select an item from the list</span>\n\t\t}\n\n\t\tif (!loaded) {\n\t\t\treturn <Spinner />;\n\t\t}\n\n\t\tconst { id, name, gender, birthYear, eyeColor } = item;\n\n    return (\n      <div className=\"item-details card\">\n        <img className=\"item-image\"\n          src={image} alt='фото'/>\n\n        <div className=\"card-body\">\n          <h4>{ name }</h4>\n          <ul className=\"list-group list-group-flush\">\n\t\t\t\t\t\t{ \n\t\t\t\t\t\t\tReact.Children.map(this.props.children, (child) => {\n\t\t\t\t\t\t\t\treturn React.cloneElement(child, { item })\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"104","replacedBy":"108"},{"ruleId":"106","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":9,"column":9,"nodeType":"112","endLine":9,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":15,"column":11,"nodeType":"112","endLine":15,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":18,"column":11,"nodeType":"112","endLine":18,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":21,"column":11,"nodeType":"112","endLine":21,"endColumn":23},{"ruleId":"113","severity":1,"message":"114","line":76,"column":3,"nodeType":"112","endLine":77,"endColumn":76},{"ruleId":"115","severity":1,"message":"116","line":71,"column":11,"nodeType":"117","messageId":"118","endLine":71,"endColumn":13},{"ruleId":"115","severity":1,"message":"119","line":71,"column":21,"nodeType":"117","messageId":"118","endLine":71,"endColumn":27},{"ruleId":"115","severity":1,"message":"120","line":71,"column":29,"nodeType":"117","messageId":"118","endLine":71,"endColumn":38},{"ruleId":"115","severity":1,"message":"121","line":71,"column":40,"nodeType":"117","messageId":"118","endLine":71,"endColumn":48},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],["122"],["123"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'gender' is assigned a value but never used.","'birthYear' is assigned a value but never used.","'eyeColor' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]